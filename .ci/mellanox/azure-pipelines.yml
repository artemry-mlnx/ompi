# TODO:
# 1. Run several executors on the agent - workspace might need to be adapted
# 2. Cleanup docker artefacts
# 3. Use docker registry (e.g. Mellanox Harbor)
# 4. Change CentOS to RHEL
# 5. Align versions of OS/MLNX_OFED with HPC-X ones
# 6. Need to reduce CI time (faster CPU, SSD, etc.)
# 7. Adapt taskset usage in scripts for AzureCI (if applicable - if several executors are allowed on an agent)
# 8. Use agent hosts with NUMA enabled

# Verification scenarios:
# 1. Trigger CI several times simultaneously (e.g. from different PRs)
# 2. Verify '/azp run' in PR comments by non-Azure users
# 3. Verify non-master PRs
# 4. Verify master per-commit CI
# 5. Verify PR CI run without AzureCI user

# Per-commit
trigger:
  - master
# All PRs
pr:
  branches:
    include:
    - '*'

pool:
  name: Default
  demands: CUSTOM_CAPABILITY -equals ompi

variables:
  ompi_ci_os_name: centos
  ompi_ci_os_version: 7
  ompi_ci_ofed: 4.7-1.0.0.1
  ompi_ci_username: swx-jenkins
  ompi_ci_uid: 6213
  ompi_ci_gid: 11429
  # Enable debug information, supported values: true, false
  debug: true

jobs:
- job: mellanox_ompi_ci
  displayName: Mellanox OpenMPI CI
  timeoutInMinutes: 240
  pool:
    name: Default
    demands: CUSTOM_CAPABILITY -equals ompi
  steps:
  - task: DeleteFiles@1
    displayName: Cleanup workspace folder
    inputs:
      sourceFolder: $(Pipeline.Workspace)
      contents: |
        **/*
  - checkout: self
    submodules: true
  - bash: |
      set -eE
      [ "$(debug)" = "true" ] && set -x
      DOCKER_BUILD_CONTEXT_DIR="/tmp/ompi_build_docker_image_${BUILD_BUILDID}"
      rm -rf ${DOCKER_BUILD_CONTEXT_DIR}
      mkdir -p ${DOCKER_BUILD_CONTEXT_DIR}
      echo "##vso[task.setvariable variable=docker_build_context_dir]${DOCKER_BUILD_CONTEXT_DIR}"
    displayName: Create temporary context folder for docker image building
  - task: Docker@2
    displayName: Build docker image
    inputs:
      command: build
      dockerfile: .ci/mellanox/Dockerfile.$(ompi_ci_os_name)$(ompi_ci_os_version)
      arguments: --no-cache --network=host --rm --force-rm --label=ompi --build-arg OMPI_CI_OS_NAME=$(ompi_ci_os_name)
        --build-arg OMPI_CI_OS_VERSION=$(ompi_ci_os_version) --build-arg OMPI_CI_OFED=$(ompi_ci_ofed)
        --build-arg OMPI_CI_USERNAME=$(ompi_ci_username) --build-arg OMPI_CI_UID=$(ompi_ci_uid)
        --build-arg OMPI_CI_GID=$(ompi_ci_gid)
      buildContext: $(DOCKER_BUILD_CONTEXT_DIR)
      repository: $(OMPI_CI_OS_NAME)_ompi_ci
      tags: $(Build.BuildId)
  - bash: |
      set -eE
      [ "$(debug)" = "true" ] && set -x
      export WORKSPACE=$(Build.SourcesDirectory)
      export OMPI_CI_DOCKER_IMAGE_NAME=$(OMPI_CI_OS_NAME)_ompi_ci:$(Build.BuildId)
      ${WORKSPACE}/.ci/mellanox/ompi_test_docker_launcher.sh
    displayName: Build and test OpenMPI
  - bash: |
      set -eE
      [ "$(debug)" = "true" ] && set -x
      rm -rf ${DOCKER_BUILD_CONTEXT_DIR}
      docker images
      docker ps -a
#      docker rmi $(OMPI_CI_OS_NAME)_ompi:$(Build.BuildId)
#      docker images
#      docker ps -a
    displayName: Post-actions
